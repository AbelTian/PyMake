{
    "path-assemblage": {
        "root": "R:/Develop",
        "root2": "V:/Develop",
        "root3": "C:/Users/Administrator",
        "root.src": "${root}/a0-develop",
        "root.prod": "${root2}/d0-product",
        "root.sdk": "${root2}/d1-sdk",
        "root.tool": "${root}/b0-toolkits",
        "root.tools": "${root}/e0-tools",
        "root.build": "${root2}/c0-buildstation",
        "root.test": "${root}/e3-test",
        "root.webrc": "${root}/e2-webrc",
        "cc": "${root.tool}/a0-compiler",
        "wincc": "${root.tool}/winCompilers",
        "python-install": "C:/Users/Administrator/AppData/Local/Programs/Python",
        "py27": "${python-install}/Python27",
        "py36": "${python-install}/Python36",
        "py37": "${python-install}/Python37",
        "py27venv": "${cc}/Pyvenv/Python27",
        "py36venv": "${cc}/Pyvenv/Python36",
        "py37venv": "${cc}/Pyvenv/Python37",
        "py": "${py27venv}",
        "py.bin": "${py};${py}/Scripts",
        "pymake": "${root.tool}/a0-compiler/PyMake",
        "pymake.env": "${pymake}/UserSource",
        "pymake.shell": "${pymake.env}/UserShell",
        "pymake.myshell": "${pymake.env}/MyShell",
        "cmake3.12": "${wincc}/CMAKE/cmake-3.12.0-win64-x64",
        "cmake3.9": "${wincc}/CMAKE/cmake3.9.1_64",
        "cmake": "${cmake3.12}",
        "cmake.bin": "${cmake}/bin",
        "LLVM": "${wincc}/LLVM",
        "LLVM.bin": "${LLVM}/bin;${LLVM}/libexec",
        "qt": "${root.tool}/winLibraries/Qt",
        "qt4.8.version": "4.8.6",
        "qt4.8.clang": "${qt}/${qt4.8.version}/clang_64",
        "qt4.8.clang.bin": "${qt4.8.clang}/bin",
        "qt4.8.mingw32": "${qt}/${qt4.8.version}/mingw32",
        "qt4.8.mingw32.bin": "${qt4.8.mingw32}/bin",
        "qt5.5.version": "5.5.1",
        "qt5.5.armhf32": "${qt}/${qt5.5.version}/armhf32",
        "qt5.5.armhf32.bin": "${qt5.5.armhf32}/bin",
        "qt5.5.armhf32.sysroot": "${qt5.5.armhf32}/sysroots/cortexa9hf-vfp-neon-poky-linux-gnueabi",
        "qt5.7.version": "5.7.1",
        "qt5.7.gcc_64": "${qt}/${qt5.7.version}/gcc_64",
        "qt5.7.gcc_64.bin": "${qt5.7.gcc_64}/bin",
        "qt5.7.android_x86": "${qt}/${qt5.7.version}/android_x86",
        "qt5.7.android_x86.bin": "${qt5.7.android_x86}/bin",
        "qt5.7.android_arm": "${qt}/${qt5.7.version}/android_armv7",
        "qt5.7.android_arm.bin": "${qt5.7.android_arm}/bin",
        "qt5.8.version": "5.8",
        "qt5.8.android_x86": "${qt}/${qt5.8.version}/android_x86",
        "qt5.8.android_x86.bin": "${qt5.8.android_x86}/bin",
        "qt5.8.android_arm": "${qt}/${qt5.8.version}/android_armv7",
        "qt5.8.android_arm.bin": "${qt5.8.android_arm}/bin",
        "qt5.8.mingw32": "${qt}/${qt5.8.version}/mingw53_32",
        "qt5.8.mingw32.bin": "${qt5.8.mingw32}/bin",
        "qt5.8.gcc_64": "${qt}/${qt5.8.version}/gcc_64",
        "qt5.8.gcc_64.bin": "${qt5.8.gcc_64}/bin",
        "qt5.8.clang": "${qt}/${qt5.8.version}/clang_64",
        "qt5.8.clang.bin": "${qt5.8.clang}/bin",
        "qt5.8.ios": "${qt}/${qt5.8.version}/ios",
        "qt5.8.ios.bin": "${qt5.8.ios}/bin",
        "qt5.9.version": "5.9.2",
        "qt5.9.mingw32": "${qt}/${qt5.9.version}/mingw53_32",
        "qt5.9.mingw32.bin": "${qt5.9.mingw32}/bin",
        "qt5.9.clang": "${qt}/${qt5.9.version}/clang_64",
        "qt5.9.clang.bin": "${qt5.9.clang}/bin",
        "qt5.9.gcc_64": "${qt}/${qt5.9.version}/gcc_64",
        "qt5.9.gcc_64.bin": "${qt5.9.gcc_64}/bin",
        "qt5.9.android_arm": "${qt}/${qt5.9.version}/android_armv7",
        "qt5.9.android_arm.bin": "${qt5.9.android_arm}/bin",
        "qt5.9.android_x86": "${qt}/${qt5.9.version}/android_x86",
        "qt5.9.android_x86.bin": "${qt5.9.android_x86}/bin",
        "qt5.9.armhf32": "${qt}/${qt5.9.version}/armhf32",
        "qt5.9.armhf32.bin": "${qt5.9.armhf32}/bin",
        "qt5.9.msvc2013": "${qt}/${qt5.9.version}/msvc2013",
        "qt5.9.msvc2013.bin": "${qt5.9.msvc2013}/bin",
        "qt5.9.msvc2013_64": "${qt}/${qt5.9.version}/msvc2013_64",
        "qt5.9.msvc2013_64.bin": "${qt5.9.msvc2013_64}/bin",
        "qt5.9.msvc2015": "${qt}/${qt5.9.version}/msvc2015",
        "qt5.9.msvc2015.bin": "${qt5.9.msvc2015}/bin",
        "qt5.9.msvc2015_64": "${qt}/${qt5.9.version}/msvc2015_64",
        "qt5.9.msvc2015_64.bin": "${qt5.9.msvc2015_64}/bin",
        "qt5.9.msvc2017": "${qt}/${qt5.9.version}/msvc2017",
        "qt5.9.msvc2017.bin": "${qt5.9.msvc2017}/bin",
        "qt5.9.msvc2017_64": "${qt}/${qt5.9.version}/msvc2017_64",
        "qt5.9.msvc2017_64.bin": "${qt5.9.msvc2017_64}/bin",
        "qt5.9.msvc": "${qt}/${qt5.9.version}/msvc2015",
        "qt5.9.msvc.bin": "${qt5.9.msvc}/bin",
        "qt5.9.msvc_64": "${qt}/${qt5.9.version}/msvc2015_64",
        "qt5.9.msvc_64.bin": "${qt5.9.msvc_64}/bin",
        "qt5.9.winrt": "${qt}/${qt5.9.version}/winrt_armv7_msvc2015",
        "qt5.9.winrt.bin": "${qt5.9.winrt}/bin",
        "qt5.9.winrt.simulator": "${qt}/${qt5.9.version}/winrt_x64_msvc2015",
        "qt5.9.winrt.simulator.bin": "${qt5.9.winrt}/bin",
        "qt5.12.version": "5.12.2",
        "qt5.12.mingw64": "${qt}/${qt5.12.version}/mingw73_64",
        "qt5.12.mingw64.bin": "${qt5.12.mingw64}/bin",
        "qt4.mingw32.version": "${qt4.8.version}",
        "qt4.mingw32": "${qt}/${qt4.8.version}/mingw32",
        "qt4.mingw32.bin": "${qt4.8.mingw32}/bin",
        "qt4.clang.version": "${qt4.8.version}",
        "qt4.clang": "${qt4.8.clang}",
        "qt4.clang.bin": "${qt4.8.clang}/bin",
        "qt5.mingw32.version": "${qt5.9.version}",
        "qt5.mingw32": "${qt5.9.mingw32}",
        "qt5.mingw32.bin": "${qt5.9.mingw32}/bin",
        "qt5.mingw64.version": "${qt5.12.version}",
        "qt5.mingw64": "${qt5.12.mingw64}",
        "qt5.mingw64.bin": "${qt5.12.mingw64}/bin",
        "qt5.armhf32.version": "${qt5.5.version}",
        "qt5.armhf32": "${qt}/${qt5.5.version}/armhf32",
        "qt5.armhf32.bin": "${qt5.5.armhf32}/bin",
        "qt5.android_arm.version": "${qt5.9.version}",
        "qt5.android_arm": "${qt5.9.android_arm}",
        "qt5.android_arm.bin": "${qt5.9.android_arm}/bin",
        "qt5.android_x86.version": "${qt5.9.version}",
        "qt5.android_x86": "${qt5.9.android_x86}",
        "qt5.android_x86.bin": "${qt5.9.android_x86}/bin",
        "mingw32": "${qt}/Tools/mingw530_32",
        "mingw32.bin": "${mingw32}/bin",
        "mingw64": "${qt}/Tools/mingw730_64",
        "mingw64.bin": "${mingw64}/bin",
        "armhf32": "${qt}/Tools/gcc-linaro-5.4.1-2017.05-i686-mingw32_arm-linux-gnueabihf",
        "armhf32.bin": "${armhf32}/bin",
        "android": "${root.tool}/winAndroidLibraries",
        "android.sdk": "${android}/android-sdk-windows",
        "android.ndk": "${android}/android-ndk-r13b",
        "android.ant": "${android}/apache-ant-1.10.3",
        "android.java": "${android}/Java",
        "sdk.plat.tool": "${android.sdk}/platform-tools",
        "sdk.build.tool": "${android.sdk}/build-tools",
        "sdk.tool": "${android.sdk}/tools",
        "java1.7.home": "${android.java}/jdk1.7.0_79.jdk/Contents/Home",
        "java1.8.home": "${android.java}/jdk1.8.0_131",
        "java1.9.home": "${android.java}/jdk9.jdk/Contents/Home",
        "java1.7.bin": "${java1.7.home}/bin",
        "java1.8.bin": "${java1.8.home}/bin",
        "java1.9.bin": "${java1.9.home}/bin",
        "java.home": "${java1.8.home}",
        "java.bin": "${java.home}/bin",
        "ant.bin": "${android.ant}/bin",
        "ndk.arm": "${android.ndk}/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64",
        "ndk.x86": "${android.ndk}/toolchains/x86-4.9/prebuilt/windows-x86_64",
        "ndk.x86_64": "${android.ndk}/toolchains/x86_64-4.9/prebuilt/windows-x86_64",
        "ndk.arm.bin": "${ndk.arm}/bin",
        "ndk.x86.bin": "${ndk.x86}/bin",
        "ndk.x86_64.bin": "${ndk.x86_64}/bin",
        "android.gradle": "${android}/gradle-all",
        "gradle4.2": "${android.gradle}/gradle-4.2.1",
        "gradle2.2": "${android.gradle}/gradle-2.2.1",
        "gradle": "${gradle4.2}",
        "gradle.bin": "${gradle}/bin",
        "test.P0": "R:/一个中文路径",
        "FFmpeg": "${root.sdk}/FFmpeg3/Windows",
        "FFmpeg.bin": "${FFmpeg}/bin",
        "FFmpeg.lib": "${FFmpeg}/lib",
        "FFmpeg.inc": "${FFmpeg}/include/FFmpeg3",
        "doxygen.bin": "${root.tools}/doxygen/bin",
        "graphviz.bin": "${root.tools}/doxygen/graphviz-2.38/bin",
        "astyle.bin": "${root.tools}/AStyle_3.1_windows/AStyle/bin",
        "bcompare": "${root.tools}/beyond compare_xpgod/Beyond Compare",
        "rapidee": "${root.tools}/RapidEEx64",
        "jcpicker": "${root.tools}/jcpicker",
        "7z": "C:/Program Files/7-Zip",
        "pycharm": "C:/Program Files/JetBrains/PyCharm Community Edition 2019.1.3/bin",
        "test.P1": "R:/一个中文路径",
        "elixir": "${wincc}/elixir-Precompiled",
        "elixir.bin": "${elixir}/bin",
        "FreePascal": "${wincc}/FreePascal/3.0.4",
        "FreePascal.bin": "${FreePascal}/bin/i386-win32",
        "perl5.26": "${wincc}/perl/perl_5.26.0.1_64",
        "perl5.30": "${wincc}/perl/strawberry-perl-5.30.0.1-64bit",
        "perl": "${perl5.30}",
        "perl.bin": "${perl}/perl/bin",
        "xmake": "${wincc}/xmake",
        "ninja": "${wincc}/ninja",
        "scons": "${wincc}/scons-3.0.0",
        "gpg": "C:/Program Files (x86)/gnupg",
        "gpg.bin": "${gpg}/bin",
        "lua": "${wincc}/lua53",
        "php32": "${wincc}/php/php-7.3.5-Win32-VC15-x86",
        "php64": "${wincc}/php/php-7.3.5-Win32-VC15-x64",
        "php": "${php64}",
        "php.bin": "${php}",
        "go": "${wincc}/go/go1.12.5.windows-amd64/go",
        "go.bin": "${go}/bin",
        "ruby": "${wincc}/ruby/ruby-1.8.4-i386-mingw32",
        "ruby.bin": "${ruby}/usr/local/bin",
        "R.bin": "${wincc}/R/R-3.6.0/bin",
        "node.js.10": "${wincc}/node.js/node-v10.16.0-win-x64",
        "node.js.6": "${wincc}/node.js/node-v6.17.1-win-x64",
        "node.js": "${node.js.10}",
        "rexx32": "${wincc}/REXX/Regina391w32",
        "rexx64": "${wincc}/REXX/Regina391w64",
        "rexx": "${rexx64}",
        "nasm32": "${wincc}/nasm/nasm-2.14.02-win32/nasm-2.14.02",
        "nasm64": "${wincc}/nasm/nasm-2.14.02",
        "nasm": "${nasm64}",
        "nasm.bin": "${nasm};${nasm}/rdoff",
        "erlang10": "${wincc}/erl10.0.1",
        "erlang10.bin": "${erlang10}/bin;${erlang10}/erts-10.0.1/bin",
        "erlang.bin": "${erlang10.bin}",
        "dlang": "${wincc}/D",
        "dlang.bin": "${dlang}/dmd2/windows/bin;${dlang}/dmd2/windows/bin64",
        "racket": "${wincc}/Racket",
        "Apache": "${wincc}/Apache",
        "Apache.24": "${wincc}/Apache/httpd-2.4.39-win64-VC15/Apache24",
        "Apache.bin": "${Apache.24}/bin",
        "Tomcat9": "${wincc}/Apache/apache-tomcat-9.0.21",
        "Tomcat.bin": "${Tomcat9}/bin",
        "groovy": "${wincc}/Apache/groovy-2.5.7",
        "groovy.bin": "${groovy}/bin",
        "hadoop": "${wincc}/Apache/hadoop-3.1.2",
        "hadoop.bin": "${hadoop}/bin",
        "kafka": "${wincc}/Apache/kafka_2.12-2.2.1",
        "kafka.bin": "${kafka}/bin/windows",
        "maven": "${wincc}/Apache/apache-maven-3.6.1",
        "maven.bin": "${maven}/bin",
        "flix": "${wincc}/Apache/felix-framework-6.0.3",
        "flix.bin": "${flix}/bin",
        "MySQL8": "${wincc}/MySQL/mysql-8.0.16-winx64",
        "MySQL": "${MySQL8}",
        "MySQL.bin": "${MySQL}/bin",
        "nginx": "${wincc}/nginx/nginx-1.16.0",
        "Lisp.SBCL": "${wincc}/Lisp/SBCL/1.4.14",
        "Lisp.SBCL_HOME": "${Lisp.SBCL}",
        "Lisp.CCL": "${wincc}/Lisp/ccl-1.11.5-windowsx86/ccl",
        "Lisp.Portacle": "${wincc}/portacle",
        "nim0": "${wincc}/nim/nim-0.20.0",
        "nim": "${nim0}",
        "nim.bin": "${nim};${nim}/bin",
        "haskell": "${wincc}/Haskell/8.6.5",
        "haskell.bin": "${haskell}/bin;${haskell}/winghci",
        "haskell.perl": "${haskell}/perl",
        "haskell.mingw": "${haskell}/mingw",
        "haskell.mingw.bin": "${haskell.mingw}/bin",
        "haskell.mingw.lib": "${haskell.mingw}/lib",
        "haskell.mingw.include": "${haskell.mingw}/include",
        "haskell.msys": "${haskell}/msys",
        "haskell.msys.bin": "${haskell}/msys/usr/bin",
        "haskell.stack": "${haskell}/../Stack",
        "haskell.stack.bin": "${haskell.stack}/usr/local/bin",
        "GnuWin32.bin": "${wincc}/GnuWin32/GnuWin32/bin",
        "msys.bin": "${root.tool}/winCompilers/mSys/bin",
        "msys2.bin": "${root.tool}/winCompilers/mSys2/bin",
        "watcom": "${wincc}/watcom1.9",
        "watcom.bin": "${watcom}/binw;${watcom}/binnt",
        "watcom.include": "${watcom}/h;${watcom}/h/nt;${watcom}/h/nt/directx;${watcom}/h/nt/ddk",
        "watcom.edpath": "${watcom}/eddat",
        "watcom.help": "${watcom}/binnt/help",
        "watcom.wipfc": "${watcom}/wipfc",
        "QtMsBuild": "C:/Users/Administrator/AppData/Local/QtMsBuild",
        "VC6": "C:/Program Files (x86)/Microsoft Visual Studio",
        "VC6.BIN": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/Bin;C:/Program Files (x86)/Microsoft Visual Studio/Common/MSDev98/Bin",
        "VC6.INCLUDE": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/Include;C:/Program Files (x86)/Microsoft Visual Studio/VC98/MFC/Include",
        "VC6.LIB": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/Lib;C:/Program Files (x86)/Microsoft Visual Studio/VC98/MFC/Lib",
        "vcvarsall-1998": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/vcvarsall.bat",
        "vcvarsall-2005": "C:/Program Files (x86)/Microsoft Visual Studio 8/VC/vcvarsall.bat",
        "vcvarsall-2008": "C:/Program Files (x86)/Microsoft Visual Studio 9.0/VC/vcvarsall.bat",
        "vcvarsall-2010": "C:/Program Files (x86)/Microsoft Visual Studio 10.0/VC/vcvarsall.bat",
        "vcvarsall-2012": "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/vcvarsall.bat",
        "vcvarsall-2013": "C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/vcvarsall.bat",
        "vcvarsall-2015": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/vcvarsall.bat",
        "vcvarsall-2017": "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Auxiliary/Build/vcvarsall.bat",
        "vcvarsall-2017-2": "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvarsall.bat",
        "vcvarsall-2019": "C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvarsall.bat",
        "vcvarsall-2019-2": "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvarsall.bat"
    },
    "environ": {
        "android.mobile": {
            "path+": [
                "${cmake.bin}",
                "${qt5.android_arm.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.arm.bin}"
            ],
            "make0": "mingw32-make",
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_HOME": "${android.sdk}",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_PLATFORM": "android-23",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "arm-linux-androideabi",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_TOOLS_PREFIX": "arm-linux-androideabi",
            "NDK_TOOLCHAIN_PATH": "${ndk.arm.bin}",
            "NDK_TOOLS_PREFIX": "arm-linux-androideabi",
            "QTDIR": "${qt5.android_arm}",
            "QTSPEC": "-spec android-g++",
            "QTCONFIG": "",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt/jar:${JAVA_HOME}/lib/tools.jar",
            "PYMAKE_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QTVERSION": "${qt5.android_arm.version}",
            "QKIT": "ANDROID",
            "QSYS": "Android"
        },
        "android.x86": {
            "path+": [
                "${cmake.bin}",
                "${qt5.android_x86.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.x86.bin}"
            ],
            "make0": "mingw32-make",
            "CLICOLOR": "1",
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_HOME": "${android.sdk}",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_PLATFORM": "android-23",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "x86_64",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_TOOLS_PREFIX": "x86_64-linux-android",
            "NDK_TOOLCHAIN_PATH": "${ndk.x86.bin}",
            "NDK_TOOLS_PREFIX": "x86_64-linux-android",
            "PYMAKE_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QTDIR": "${qt5.android_x86}",
            "QTSPEC": "-spec android-g++",
            "QTCONFIG": "",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt/jar:${JAVA_HOME}/lib/tools.jar",
            "QTVERSION": "${qt5.android_x86.version}",
            "QKIT": "ANDROIDX86",
            "QSYS": "AndroidX86"
        },
        "qt4": {
            "path+": [
                "${cmake.bin}",
                "${mingw32.bin}",
                "${qt4.mingw32.bin}"
            ],
            "make0": "mingw32-make",
            "QTVERSION": "${qt4.mingw32.version}",
            "QTDIR": "${qt4.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "CONFIG+=x86",
            "QKIT": "WIN32",
            "QSYS": "Windows"
        },
        "qt5": {
            "path+": [
                "${cmake.bin}",
                "${mingw32.bin}",
                "${qt5.mingw32.bin}"
            ],
            "CMAKEGENERATOR": "MinGW Makefiles",
            "make0": "mingw32-make",
            "QTVERSION": "${qt5.mingw32.version}",
            "QTDIR": "${qt5.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "Windows"
        },
        "qt5.x64": {
            "path+": [
                "${cmake.bin}",
                "${mingw64.bin}",
                "${qt5.mingw64.bin}"
            ],
            "make0": "mingw32-make",
            "QTVERSION": "${qt5.mingw64.version}",
            "QTDIR": "${qt5.mingw64}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "",
            "QKIT": "WIN64",
            "QSYS": "Win64"
        },
        "qt5.vc6": {
            "path+": [
                "${cmake.bin}",
                "${VC6.BIN}",
                "${qt5.9.vc6.bin}"
            ],
            "INCLUDE": "${VC6.INCLUDE}",
            "LIB": "${VC6.LIB}",
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.vc6}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "make0": "nmake.exe"
        },
        "qt5.msvc2015": {
            "path+": [
                "${cmake.bin}",
                "${qt5.9.msvc2015.bin}"
            ],
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "amd64_x86",
            "run-vcvarsall": "\"${vcvarsall}\" ${vcvarsallparam}",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.msvc2015}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "make0": "nmake.exe"
        },
        "qt5.msvc2015.x64": {
            "path+": [
                "${cmake.bin}",
                "${qt5.9.msvc2015_64.bin}"
            ],
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "x86_amd64",
            "run-vcvarsall": "${vcvarsall} ${vcvarsallparam}",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.msvc2015_64}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC64",
            "make0": "nmake.exe"
        },
        "qt5.winrt": {
            "path+": [
                "${cmake.bin}",
                "${qt5.12.winrt.arm.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "amd64_arm",
            "run-vcvarsall": "${vcvarsall} ${vcvarsallparam}",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.12.version}",
            "QTDIR": "${qt5.12.winrt.arm}",
            "QTSPEC": "-spec winrt-arm-msvc2015",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "WinRT",
            "MSMAKE": "${make2}"
        },
        "qt5.winrt.simulator": {
            "path+": [
                "${cmake.bin}",
                "${qt5.12.winrt.x64.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "x86_amd64",
            "run-vcvarsall": "${vcvarsall} ${vcvarsallparam}",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.12.version}",
            "QTDIR": "${qt5.12.winrt.x64}",
            "QTSPEC": "-spec winrt-x64-msvc2015",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "WinRTSimulator",
            "MSMAKE": "${make2}"
        },
        "armhf32": {
            "path+": [
                "${cmake.bin}",
                "${qt5.armhf32.bin}",
                "${armhf32.bin}"
            ],
            "make0": "make",
            "QTVERSION": "${qt5.armhf32.version}",
            "QTDIR": "${qt5.armhf32}",
            "QTSPEC": "-spec linux-arm-gnueabihf-g++",
            "QTCONFIG": "",
            "QKIT": "Armhf32",
            "QSYS": "Armhf32"
        },
        "msys": {
            "path+": [
                "${msys.bin}"
            ]
        },
        "msys2": {
            "path+": [
                "${msys2.bin}"
            ]
        },
        "qt5.llvm": {
            "path+": [
                "${LLVM.bin}"
            ]
        },
        "watcom": {
            "path+": [
                "${watcom.bin}"
            ],
            "WATCOM": "${watcom}",
            "EDPATH": "${watcom.edpath}",
            "WHTMLHELP": "${watcom.help}",
            "WIPFC": "${watcom.wipfc}",
            "INCLUDE": "${watcom.include}"
        },
        "haskell": {
            "path+": [
                "${haskell.bin}",
                "${haskell.mingw.bin}",
                "${haskell.msys}",
                "${haskell.msys.bin}",
                "${haskell.perl}",
                "${haskell.stack.bin}"
            ],
            "STACK_ROOT": "${haskell}/Stack"
        },
        "other2": {
            "path+": [
                "${doxygen.bin}",
                "${graphviz.bin}",
                "${perl.bin}",
                "${xmake}",
                "${ninja}",
                "${java1.8.bin}",
                "${py.bin}",
                "${lua}",
                "${php}",
                "${go.bin}",
                "${ruby.bin}",
                "${R.bin}",
                "${gradle.bin}",
                "${cmake.bin}",
                "${mingw32.bin}",
                "${qt5.mingw32.bin}"
            ],
            "CMAKEGENERATOR": "MinGW Makefiles",
            "make0": "mingw32-make",
            "QTVERSION": "${qt5.mingw32.version}",
            "QTDIR": "${qt5.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "Windows"
        },
        "current": "qt5"
    },
    "Path.Tips": {
        "OLDNAME": "variable-assemblage",
        "MyName": "T.D.R.",
        "TIPS": "If you lost variable content or command content, please record to there, I wont delete them.",
        "Start": "路径集是PyMake工具一切的开始。用户只需要把电脑上的路径在路径集里部署一次即可。最好部署全面。使用很方便，可以在environ里使用，可以在command里使用，可以在custom.path+.ini和custom.var+.ini里使用。",
        "Pyvenv.Tips": "创建Python虚拟环境的时候，不要继承site-packages。",
        "Python命令": "PyMake提供python命令，内部使用'python'进行调用。python有能力同时具有多个执行环境，为了方便切换，用户不要把python加入系统路径。加到这个文件里最好。"
    },
    "Environ.Tips": {
        "Tips.Separate": "上边配置的每个环境都是互相冲突的。",
        "system": "PyMake给用户提供system命令，查看系统环境，但是，不允许修改。如果用户希望修改，建议使用rapidee修改。",
        "local": "local环境，是PyMake给用户提供的内部的公共环境，只读。",
        "custom": "custom环境，是PyMake允许用户设置的公共环境。custom.ini决定自定义环境的开关。custom.path+.ini配置环境路径，custom.var+.ini配置环境变量。"
    },
    "Command.Tips": {
        "OLDNAME": "command-assemblage",
        "hello.work": "hello world.",
        "go.build": "go build -ldflags=\"-H windowsgui\"",
        "build.qmake": "也叫做build.pro，在Qt Source路径编译源代码",
        "cmake": "在source路径打开cmake-gui。这个cmake到底怎么从命令行配置？再等等谁出一个cmake命令行的丰富用法。",
        "build.cmake": "开启cmake的make编译。",
        "open.run": "编译完，运行一下。",
        "watcom": "watcom提供CL 13，和MSVC CL 13冲突，也不要给MinGW环境用，冲突。",
        "configure.qt5.mingw32.static": "need python2 for webengine."
    },
    "command": {
        "cc0": [],
        "cc1": [
            "@echo off",
            "echo hello."
        ],
        "ccc": [
            "echo %QTDIR%"
        ],
        "test": [
            "echo %cd%"
        ],
        "test.2": [
            "echo %*",
            "set param=%*",
            "echo %param%",
            "ping 127.0.0.1 %param%",
            "rem exit /b 0"
        ],
        "test.3": [
            "rem echo %*",
            "ping %*"
        ],
        "test.4": [
            "exit /b 0"
        ],
        "test.5": [
            "echo 中文。"
        ],
        "test.6": [
            "echo %Path%"
        ],
        "open.dir": [
            "echo [%1]",
            "if not exist \"\"%1\"\" ( echo has no this dir. & exit /b 0)",
            "rem echo [%1]",
            "start %1"
        ],
        "open.tool": [
            "start ${root.tools}/%1.exe.lnk"
        ],
        "qqtsh": [
            "cd ${root.src}",
            "call %1"
        ],
        "android.sdk": [
            "${android.sdk}/\"SDK Manager.exe\""
        ],
        "daily.qqt": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/${QSYS}/${QTVERSION}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% ${QTSPEC} CONFIG+=debug CONFIG+=qml_debug ${QTCONFIG} && mingw32-make qmake_all",
            "mingw32-make -j10",
            "set build=${root.build}/QQt/${QSYS}/${QTVERSION}/Release",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% ${QTSPEC} CONFIG+=release CONFIG+=qml_release ${QTCONFIG} && mingw32-make qmake_all",
            "mingw32-make -j10"
        ],
        "qqt.build": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10"
        ],
        "color.picker": [
            "start ${jcpicker}\\jcpicker.exe"
        ],
        "qt.creator": [
            "cd ${root.build}",
            "start ${qt}/Tools/QtCreator/bin/qtcreator.exe"
        ],
        "adb.d": [
            "adb devices"
        ],
        "libtool": [
            "cd /d ${root.prod}/AddLibraryTool/Windows",
            "start ${root.prod}/AddLibraryTool/Windows/AddLibraryTool.exe"
        ],
        "libtool2": [
            "cd /d ${root.prod}/AddLibraryTool-Multiple/Windows",
            "start ${root.prod}/AddLibraryTool-Multiple/Windows/AddLibraryTool-Multiple.exe"
        ],
        "apptool": [
            "cd /d ${root.prod}/ProductExecTool/Windows",
            "start ${root.prod}/ProductExecTool/Windows/ProductExecTool.exe"
        ],
        "open.pymake": [
            "set sdk=%PYMAKEPROGRAMROOT%",
            "start %sdk%"
        ],
        "open.prod": [
            "set prod=%1",
            "cd /d ${root.prod}/%prod%/Windows",
            "start ${root.prod}/%prod%/Windows/%prod%.exe"
        ],
        "open.prodd": [
            "set prod=%1",
            "echo %prod%",
            "echo ${root.prod}/%prod%/Windows/%prod%d.exe",
            "cd /d ${root.prod}/%prod%/Windows",
            "start ${root.prod}/%prod%/Windows/%prod%d.exe"
        ],
        "open.src": [
            "set src=%1",
            "start ${root.src}/%src%"
        ],
        "open.sdk": [
            "set sdk=%1",
            "start ${root.sdk}/%sdk%"
        ],
        "open.env": [
            "set env0=%PYMAKESOURCEROOT%",
            "start %env0%"
        ],
        "open.build": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "start %build%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "add.project": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtApplicationCreator/Windows",
            "set apptool=%apptoolroot%/QQtApplicationCreatord.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.2": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtApplicationCreator-Multipel/Windows",
            "set apptool=%apptoolroot%/QQtApplicationCreator-Multipeld.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.lib": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtLibraryCreator/Windows",
            "set apptool=%apptoolroot%/QQtLibraryCreatord.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.lib.2": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtLibraryCreator-Multipel/Windows",
            "set apptool=%apptoolroot%/QQtLibraryCreator-Multipeld.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.sdk": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set sdktoolroot=${root.prod}/AddLibraryTool/Windows",
            "set sdktool=%sdktoolroot%/AddLibraryToold.exe",
            "if not exist \"%sdktool%\" ( echo %sdktool% is not exist. please build it in debug mode. & exit /b 0)",
            "cd /d %sdktoolroot%",
            "set projectroot=%src_path:\\=/%",
            "start %sdktool% output \"%projectroot%\" "
        ],
        "add.sdk.2": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set sdktoolroot=${root.prod}/AddLibraryTool-Multiple/Windows",
            "set sdktool=%sdktoolroot%/AddLibraryTool-Multipled.exe",
            "if not exist \"%sdktool%\" ( echo %sdktool% is not exist. please build it in debug mode. & exit /b 0)",
            "cd /d %sdktoolroot%",
            "set projectroot=%src_path:\\=/%",
            "start %sdktool% output \"%projectroot%\" "
        ],
        "build.qmake": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "open.run.d": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set exeroot=%build%\\debug",
            "set exeroot=%exeroot:\\=/%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%build%\\debug\\%relativepath%\\%profilename%d.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%d.exe is not exist. & exit /b 0)",
            "cd /d %exeroot:/=\\%",
            "start %exe%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "open.run": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set exeroot=%build%\\debug",
            "set exeroot=%exeroot:\\=/%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%build%\\debug\\%relativepath%\\%profilename%.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%.exe is not exist. & exit /b 0)",
            "cd /d %exeroot:/=\\%",
            "start %exe%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "cmake": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "::set src=%src_path%/%profilename%.pro",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "start ${cmake.bin}/cmake-gui.exe",
            "cd /d %src_path%"
        ],
        "build.cmake": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "call ${make0}",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.1": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.sdk}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.2": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.prod}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "configure.qt5.android": [
            "mkdir -p ${qt5.build.path}",
            "cd ${qt5.build.path}",
            "${qt5.source}/configure -prefix ${qqt.install.path} -hostprefix ${qqt.install.path} -xplatform android-g++ -release -nomake tests -nomake examples -android-ndk $ANDROID_NDK_ROOT -android-sdk $ANDROID_SDK_ROOT -android-ndk-host $ANDROID_NDK_HOST -android-toolchain-version $ANDROID_NDK_TOOLCHAIN_VERSION -skip qtwebkit-examples -no-warnings-are-errors"
        ],
        "configure.qt5.armhf32": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/armhf32",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -shared --sysroot=${qt5.5.armhf32.sysroot} --prefix=%sdk_path% -xplatform linux-arm-gnueabihf-g++ -nomake tests -nomake examples -no-warnings-are-errors"
        ],
        "configure.qt5.mingw32.static": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5_static/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/mingw53_32_static",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -debug-and-release -static --prefix=%sdk_path% -nomake tests -nomake examples -no-warnings-are-errors -opengl desktop",
            "echo %src_path%",
            "echo %build%",
            "echo %sdk_path%"
        ],
        "test.end": [
            "echo the env path: %Path%.",
            "echo the last: %CD%."
        ],
        "test.7": [
            "type %1"
        ],
        "open.webrc": [
            "set src=%1",
            "set srcdir=${root.webrc}",
            "if not \"\"%src%\"\" == \"\"\"\" ( set srcdir=%srcdir%/%src% )",
            "set srcdir=%srcdir:/=\\%",
            "echo %srcdir%",
            "start %srcdir%"
        ],
        "build.qt5.mingw32.static": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5_static/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/mingw53_32_static",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "${make0}",
            "${make0} install",
            "echo %src_path%",
            "echo %build%",
            "echo %sdk_path%"
        ],
        "qqt.sh": [
            "cd ${root.src}",
            "call %1"
        ],
        "qqt.daily": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Release",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=release CONFIG+=qml_release %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10"
        ],
        "build.go": [
            "if not exist \"*.go\" ( echo has any .go? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.go",
            "if not exist \"%src%\" ( echo %profilename%.go is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "call go build %src% ",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ]
    }
}
{
    "path-assemblage": {
        "root": "C:/Users/Administrator/Develop",
        "root.src": "${root}/a0-develop",
        "root.prod": "${root}/b1-product",
        "root.tool": "${root}/b0-toolkit",
        "root.build": "${root}/c0-build",
        "root.test": "${root}/c1-test",
        "root.webrc": "${root}/b2-webrc",
        "cc": "${root.tool}/compiler",
        "cmake": "${cc}/CMake.app/Contents",
        "cmake.bin": "${cmake}/MacOS",
        "qt": "${root.tool}/Qt",
        "qt5.9.version": "5.9.2",
        "qt4.version": "4.8.6",
        "qt4.8.mingw32": "${qt}/4.8.6/mingw32",
        "qt4.8.mingw32.bin": "${qt4.8.mingw32}/bin",
        "qt5.9.mingw32": "${qt}/5.9.2/mingw53_32",
        "qt5.9.mingw32.bin": "${qt5.9.mingw32}/bin",
        "qt5.9.clang": "${qt}/5.9.2/clang_64",
        "qt5.9.clang.bin": "${qt5.9.clang}/bin",
        "qt5.9.gcc_64": "${qt}/5.9.2/gcc_64",
        "qt5.9.gcc_64.bin": "${qt5.9.gcc_64}/bin",
        "qt5.9.android_arm": "${qt}/5.9.1/android_armv7",
        "qt5.9.android_arm.bin": "${qt}/5.9.1/android_armv7/bin",
        "qt5.9.android_x86": "${qt}/5.9.1/android_x86",
        "qt5.9.android_x86.bin": "${qt}/5.9.1/android_x86/bin",
        "qt5.8.android_x86": "${qt}/5.8/android_x86",
        "qt5.8.android_x86.bin": "${qt5.8.android_x86}/bin",
        "qt5.8.android_arm": "${qt}/5.8/android_armv7",
        "qt5.8.android_arm.bin": "${qt5.8.android_arm}/bin",
        "qt5.8.mingw32": "${qt}/5.8/mingw53_32",
        "qt5.8.mingw32.bin": "${qt5.8.mingw32}/bin",
        "qt5.8.gcc_64": "${qt}/5.8/gcc_64",
        "qt5.8.gcc_64.bin": "${qt5.8.gcc_64}/bin",
        "qt5.8.clang": "${qt}/5.8/clang_64",
        "qt5.8.clang.bin": "${qt5.8.clang}/bin",
        "qt5.8.ios": "${qt}/5.8/ios",
        "qt5.8.ios.bin": "${qt5.8.ios}/bin",
        "qt5.7.gcc_64": "${qt}/5.7.1/gcc_64",
        "qt5.7.android_x86": "${qt}/5.7/android_x86",
        "qt5.7.android_arm": "${qt}/5.7/android_armv7",
        "qt4.8.clang": "${qt}/4.8.7/clang_64",
        "qt4.8.clang.bin": "${qt4.8.clang}/bin",
        "mingw32": "${qt}/mingw530_32",
        "mingw32.bin": "${mingw32}/bin",
        "android": "${root.tool}/winAndroidLibraries",
        "android.sdk": "${android}/android-sdk-linux",
        "android.ndk": "${android}/android-ndk-r13b",
        "android.ant": "${android}/apache-ant-1.10.1",
        "android.java": "${android}/Java",
        "sdk.plat.tool": "${android.sdk}/platform-tools",
        "sdk.build.tool": "${android.sdk}/build-tools",
        "sdk.tool": "${android.sdk}/tools",
        "java1.7.home": "${android.java}/jdk1.7.0_79.jdk/Contents/Home",
        "java1.8.home": "${android.java}/jdk1.8.0_131",
        "java1.9.home": "${android.java}/jdk9.jdk/Contents/Home",
        "java1.7.bin": "${java1.7.home}/bin",
        "java1.8.bin": "${java1.8.home}/bin",
        "java1.9.bin": "${java1.9.home}/bin",
        "ant.bin": "${android.ant}/bin",
        "ndk.arm": "${android.ndk}/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64",
        "ndk.x86": "${android.ndk}/toolchains/x86-4.9/prebuilt/windows-x86_64",
        "ndk.x86_64": "${android.ndk}/toolchains/x86_64-4.9/prebuilt/windows-x86_64",
        "ndk.arm.bin": "${ndk.arm}/bin",
        "ndk.x86.bin": "${ndk.x86}/bin",
        "ndk.x86_64.bin": "${ndk.x86_64}/bin"
    },
    "variable-assemblage": {
        "qt.sys.mac": "MacOS",
        "qt.sys.android.x86_64": "Android-x86_64",
        "qt.sys.android.x86": "Android",
        "qt.sys.android.arm": "Android-arm",
        "build.debug": "Debug",
        "build.release": "Release",
        "qqt.prod.name": "QQt",
        "qqt.proj.name": "a0-qqtfoundation",
        "qqt.build.path": "${root.build}/${qqt.proj.name}/${qt.sys.mac}/${build.release}",
        "qqt.source.path": "${root.src}/${qqt.proj.name}",
        "qqt.proj.qmake": "${qqt.proj.name}.pro",
        "qqt.prod.path": "${qqt.build.path}/src/bin",
        "qqt.install.path": "${root.prod}/QQt",
        "qqtframe.prod.name": "qqtframe",
        "qqtframe.bin.path": "${qqt.build.path}/examples/${qqtframe.prod.name}/bin",
        "qqtframe.dep1": "${qqt.build.path}/src/bin/QQt.framework",
        "qqtframe.dep1.name": "QQt.framework/Versions/1/QQt",
        "qt5.source": "${root.tool}/Source/qt5",
        "qt5.build.path": "${root.build}/qt5",
        "mac.app": "${prod.name}.app",
        "mac.app.content": "${mac.app}/Contents",
        "mac.app.macos": "${mac.app.content}/MacOS",
        "mac.app.framework": "${mac.app.content}/Frameworks",
        "mac.app.res": "${mac.app.content}/Resources",
        "mac.app.plugin": "${mac.app.content}/PlugIns",
        "mac.framework": "${prod.name}.framework",
        "mac.framework.ver": "${prod.name}.framework/Versions",
        "mac.framework.res": "${prod.name}.framework/Resources",
        "qt.deploy.android": "androiddeployqt",
        "qt.deploy.mac": "macdeployqt"
    },
    "command-assemblage": [
        "I'm not similar to these command, so list them here, rather than forgotten them",
        "cl-command, sys-command",
        "replace? no, append? easy!",
        "help you to remeber these command.",
        "mkdir -p ${qqt.build.path}",
        "cd ${build-path}",
        "cmake -G\"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=${prod-root} ${source-path}",
        "cmake -GXCode -DCMAKE_INSTALL_PREFIX=${prod-root} ${source-path}",
        "rm -f CMakeCache.txt",
        "qmake ${source-path}/${qmake-file} -spec ${QTSPEC} CONFIG+=${QTCONFIG} && make qmake_all",
        "make -j4",
        "make clean in ${build-path}",
        "make install",
        "${deployqt} ${bin-path}/${app-bundle} -verbose=1",
        "${deployqt} -dmg",
        "${deployqt} --help",
        "cp -fr ${lib-dep} ${lib-native}",
        "install_name_tool -change ${lib-dep-name} @rpath/${lib-dep-name} ${app-native}/${prod-name} ",
        "install_name_tool -change $LibDep @rpath/$LibDep ${app-native}/${prod-name} ",
        "${source-path}/configure -prefix ${install-path} -hostprefix ${install-path} -xplatform android-g++ -release -nomake tests -nomake examples -android-ndk $ANDROID_NDK_ROOT -android-sdk $ANDROID_SDK_ROOT -android-ndk-host $ANDROID_NDK_HOST -android-toolchain-version $ANDROID_NDK_TOOLCHAIN_VERSION -skip qtwebkit-examples -no-warnings-are-errors"
    ],
    "environ": {
        "android.mobile": {
            "path+": [
                "${cmake.bin}",
                "${qt5.8.android_arm.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.arm.bin}"
            ],
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "arm-linux-androideabi",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_PLATFORM": "android-23",
            "NDK_TOOLCHAIN_PATH": "${ndk.arm.bin}",
            "NDK_TOOLS_PREFIX": "arm-linux-androideabi",
            "QTDIR": "${qt5.8.android_arm}",
            "QTSPEC": "android-g++",
            "QTCONFIG": "",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar",
            "PYCMD_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QKIT": "Android",
            "QSYS": "Android"
        },
        "android.x86": {
            "path+": [
                "${cmake.bin}",
                "${qt5.8.android_x86.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.x86.bin}"
            ],
            "CLICOLOR": "1",
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "x86",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_PLATFORM": "android-23",
            "NDK_TOOLCHAIN_PATH": "${ndk.x86.bin}",
            "NDK_TOOLS_PREFIX": "i686-linux-android",
            "PYCMD_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QTDIR": "${qt5.8.android_x86}",
            "QTSPEC": "android-g++",
            "QTCONFIG": "",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar",
            "QKIT": "ANDROIDX86",
            "QSYS": "AndroidByWin"
        },
        "qt.android": {
            "path+": [
                "${cmake.bin}",
                "${qt5.8.mingw32.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.x86.bin}"
            ],
            "CLICOLOR": "1",
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "x86",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_PLATFORM": "android-23",
            "NDK_TOOLCHAIN_PATH": "${ndk.x86.bin}",
            "NDK_TOOLS_PREFIX": "i686-linux-android",
            "QTDIR": "${qt5.8.mingw32}",
            "QTSPEC": "win32-g++",
            "QTCONFIG": "x86_64",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt.jar:${JAVA_HOME}/lib/tools.jar",
            "PYCMD_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QKIT": "WIN",
            "QSYS": "Mingw32"
        },
        "qt4": {
            "path+": [
                "${cmake.bin}",
                "${qt4.8.mingw32.bin}"
            ],
            "QTVERSION": "${qt4.8.version}",
            "QTDIR": "${qt4.8.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "CONFIG+=x86",
            "QKIT": "WIN32",
            "QSYS": "Windows"
        },
        "qt5": {
            "path+": [
                "${cmake.bin}",
                "${qt5.9.mingw32.bin}"
            ],
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "CONFIG+=x86",
            "QKIT": "WIN64",
            "QSYS": "Win64"
        },
        "current": "qt.android"
    },
    "command": {
        "daily.qqt": [
            "set src_path=%root%/a0-develop/LibQt",
            "set src=%src_path%/QQt.pro",
            "set build=C:/Users/Administrator/Develop/c0-build/QQt/${QSYS}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rm -rf *",
            "rm -rf %src_path%/../QQt/${QTVERSION}/${QSYS}/Debug",
            "qmake %src% -spec ${QTSPEC} CONFIG+=debug CONFIG+=qml_debug CONFIG+=${QTCONFIG} && mingw32-make qmake_all",
            "mingw32-make -j4",
            "src_path=/home/abel/Develop/a0-develop/LibQt",
            "src=$src_path/QQt.pro",
            "build=/home/abel/Develop/c0-buildstation/QQt/${QTVERSION}/${QSYS}/Debug",
            "mkdir -p $build",
            "cd $build",
            "rm -rf ./*",
            "rm -rf ${src_path}/../QQt/${QTVERSION}/${QSYS}/Debug",
            "qmake $src ${QTSPEC} ${QTCONFIG} CONFIG+=debug && make qmake_all",
            "make -j4"
        ],
        "qqt.build": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10"
        ],
        "qt-creator": [
            "cd ${root.build}",
            "\"/Applications/Qt Creator.app/Contents/MacOS/Qt Creator\""
        ],
        "qt5.android.build": [
            "mkdir -p ${qt5.build.path}",
            "cd ${qt5.build.path}",
            "${qt5.source}/configure -prefix ${qqt.install.path} -hostprefix ${qqt.install.path} -xplatform android-g++ -release -nomake tests -nomake examples -android-ndk $ANDROID_NDK_ROOT -android-sdk $ANDROID_SDK_ROOT -android-ndk-host $ANDROID_NDK_HOST -android-toolchain-version $ANDROID_NDK_TOOLCHAIN_VERSION -skip qtwebkit-examples -no-warnings-are-errors"
        ],
        "adb": [
            "adb devices"
        ],
        "android.sdk.manager": [
            "${android.sdk}/\"SDK Manager.exe\""
        ],
        "cc0": [],
        "cc1": [
            "@echo off",
            "echo hello."
        ],
        "ccc": [
            "echo %QTDIR%"
        ],
        "test": [
            "echo %cd%"
        ],
        "test.2": [
            "echo %*",
            "set param=%*",
            "echo %param%",
            "ping 127.0.0.1 %param%",
            "rem exit /b 0"
        ],
        "test.3": [
            "rem echo %*",
            "ping %*"
        ],
        "test.4": [
            "exit /b 0"
        ],
        "test.5": [
            "echo 中文。"
        ],
        "test.6": [
            "echo %Path%"
        ],
        "test.7": [
            "type %1"
        ],
        "open.dir": [
            "echo [%1]",
            "if not exist \"\"%1\"\" ( echo has no this dir. & exit /b 0)",
            "rem echo [%1]",
            "start %1"
        ],
        "open.tool": [
            "start ${root.tools}/%1.exe.lnk"
        ],
        "android.sdk": [
            "${android.sdk}/\"SDK Manager.exe\""
        ],
        "color.picker": [
            "start ${jcpicker}\\jcpicker.exe"
        ],
        "qt.creator": [
            "cd ${root.build}",
            "start ${qt}/Tools/QtCreator/bin/qtcreator.exe"
        ],
        "adb.d": [
            "adb devices"
        ],
        "libtool": [
            "cd /d ${root.prod}/AddLibraryTool/Windows",
            "start ${root.prod}/AddLibraryTool/Windows/AddLibraryTool.exe"
        ],
        "libtool2": [
            "cd /d ${root.prod}/AddLibraryTool-Multiple/Windows",
            "start ${root.prod}/AddLibraryTool-Multiple/Windows/AddLibraryTool-Multiple.exe"
        ],
        "apptool": [
            "cd /d ${root.prod}/ProductExecTool/Windows",
            "start ${root.prod}/ProductExecTool/Windows/ProductExecTool.exe"
        ],
        "open.pymake": [
            "set sdk=%PYMAKEPROGRAMROOT%",
            "start %sdk%"
        ],
        "open.prod": [
            "set prod=%1",
            "cd /d ${root.prod}/%prod%/Windows",
            "start ${root.prod}/%prod%/Windows/%prod%.exe"
        ],
        "open.prodd": [
            "set prod=%1",
            "echo %prod%",
            "echo ${root.prod}/%prod%/Windows/%prod%d.exe",
            "cd /d ${root.prod}/%prod%/Windows",
            "start ${root.prod}/%prod%/Windows/%prod%d.exe"
        ],
        "open.webrc": [
            "set src=%1",
            "set srcdir=${root.webrc}",
            "if not \"\"%src%\"\" == \"\"\"\" ( set srcdir=%srcdir%/%src% )",
            "set srcdir=%srcdir:/=\\%",
            "echo %srcdir%",
            "start %srcdir%"
        ],
        "open.src": [
            "set src=%1",
            "start ${root.src}/%src%"
        ],
        "open.sdk": [
            "set sdk=%1",
            "start ${root.sdk}/%sdk%"
        ],
        "open.env": [
            "set env0=%PYMAKESOURCEROOT%",
            "start %env0%"
        ],
        "open.build": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "start %build%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "add.project": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtApplicationCreator/Windows",
            "set apptool=%apptoolroot%/QQtApplicationCreatord.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.2": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtApplicationCreator-Multipel/Windows",
            "set apptool=%apptoolroot%/QQtApplicationCreator-Multipeld.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.lib": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtLibraryCreator/Windows",
            "set apptool=%apptoolroot%/QQtLibraryCreatord.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.lib.2": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtLibraryCreator-Multipel/Windows",
            "set apptool=%apptoolroot%/QQtLibraryCreator-Multipeld.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.sdk": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set sdktoolroot=${root.prod}/AddLibraryTool/Windows",
            "set sdktool=%sdktoolroot%/AddLibraryToold.exe",
            "if not exist \"%sdktool%\" ( echo %sdktool% is not exist. please build it in debug mode. & exit /b 0)",
            "cd /d %sdktoolroot%",
            "set projectroot=%src_path:\\=/%",
            "start %sdktool% output \"%projectroot%\" "
        ],
        "add.sdk.2": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set sdktoolroot=${root.prod}/AddLibraryTool-Multiple/Windows",
            "set sdktool=%sdktoolroot%/AddLibraryTool-Multipled.exe",
            "if not exist \"%sdktool%\" ( echo %sdktool% is not exist. please build it in debug mode. & exit /b 0)",
            "cd /d %sdktoolroot%",
            "set projectroot=%src_path:\\=/%",
            "start %sdktool% output \"%projectroot%\" "
        ],
        "build.qmake": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "open.run.d": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set exeroot=%build%\\debug",
            "set exeroot=%exeroot:\\=/%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%build%\\debug\\%relativepath%\\%profilename%d.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%d.exe is not exist. & exit /b 0)",
            "cd /d %exeroot:/=\\%",
            "start %exe%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "open.run": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set exeroot=%build%\\debug",
            "set exeroot=%exeroot:\\=/%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%build%\\debug\\%relativepath%\\%profilename%.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%.exe is not exist. & exit /b 0)",
            "cd /d %exeroot:/=\\%",
            "start %exe%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "cmake": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "::set src=%src_path%/%profilename%.pro",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "start ${cmake.bin}/cmake-gui.exe",
            "cd /d %src_path%"
        ],
        "build.cmake": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "call ${make0}",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.1": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.sdk}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.2": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.prod}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "configure.qt5.android": [
            "mkdir -p ${qt5.build.path}",
            "cd ${qt5.build.path}",
            "${qt5.source}/configure -prefix ${qqt.install.path} -hostprefix ${qqt.install.path} -xplatform android-g++ -release -nomake tests -nomake examples -android-ndk $ANDROID_NDK_ROOT -android-sdk $ANDROID_SDK_ROOT -android-ndk-host $ANDROID_NDK_HOST -android-toolchain-version $ANDROID_NDK_TOOLCHAIN_VERSION -skip qtwebkit-examples -no-warnings-are-errors"
        ],
        "configure.qt5.armhf32": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/armhf32",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -shared --sysroot=${qt5.5.armhf32.sysroot} --prefix=%sdk_path% -xplatform linux-arm-gnueabihf-g++ -nomake tests -nomake examples -no-warnings-are-errors"
        ],
        "configure.qt5.mingw32.static": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5_static/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/mingw53_32_static",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -debug-and-release -static --prefix=%sdk_path% -nomake tests -nomake examples -no-warnings-are-errors -opengl desktop",
            "echo %src_path%",
            "echo %build%",
            "echo %sdk_path%"
        ],
        "build.qt5.mingw32.static": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5_static/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/mingw53_32_static",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "${make0}",
            "${make0} install",
            "echo %src_path%",
            "echo %build%",
            "echo %sdk_path%"
        ],
        "qqt.sh": [
            "cd ${root.src}",
            "call %1"
        ],
        "qqt.daily": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Release",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=release CONFIG+=qml_release %QTCONFIG% && mingw32-make qmake_all",
            "mingw32-make -j10"
        ],
        "build.go": [
            "if not exist \"*.go\" ( echo has any .go? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.go",
            "if not exist \"%src%\" ( echo %profilename%.go is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "call go build %src% ",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "test.end": [
            "echo the env path: %Path%.",
            "echo the last: %CD%."
        ]
    }
}
{
    "path-assemblage": {
        "root": "C:/Users/Administrator/Develop",
        "root2": "D:/Develop",
        "root.src": "${root}/a0-develop",
        "root.prod": "${root2}/d0-product",
        "root.sdk": "${root2}/d1-sdk",
        "root.tool": "${root}/b0-toolkits",
        "root.tools": "${root}/e0-tools",
        "root.build": "${root2}/c0-buildstation",
        "root.test": "${root}/e3-test",
        "root.webrc": "${root}/e2-webrc",
        "cc": "${root.tool}/a0-compiler",
        "pymake": "${root.tool}/PyMake",
        "FFmpeg": "${root.sdk}/FFmpeg3/Windows",
        "FFmpeg.bin": "${FFmpeg}/bin",
        "FFmpeg.lib": "${FFmpeg}/lib",
        "FFmpeg.inc": "${FFmpeg}/include/FFmpeg3",
        "wincc": "${root.tool}/winCompilers",
        "cmake": "${wincc}/cmake3.9.1_64",
        "cmake.bin": "${cmake}/bin",
        "msys.bin": "${root.tool}/winCompilers/mSys/bin",
        "qt5.8": "${root.tool}/Qt",
        "qt5.9": "${root.tool}/Qt5.9.6",
        "qt5.12": "${root.tool}/Qt5.12.2",
        "qt5.9.version": "5.9.2",
        "qt5.12.version": "5.12.2",
        "qt5.5.version": "5.5.1",
        "qt5.version": "5.9.2",
        "qt4.version": "4.8.6",
        "qt4.8.mingw32": "${qt}/${qt4.version}/mingw32",
        "qt4.8.mingw32.bin": "${qt4.8.mingw32}/bin",
        "qt5.armhf32": "${qt}/${qt5.version}/mingw53_armhf32",
        "qt5.armhf32.bin": "${qt5.armhf32}/bin",
        "qt5.5.armhf32": "${qt}/${qt5.5.version}/armhf32",
        "qt5.5.armhf32.bin": "${qt5.5.armhf32}/bin",
        "qt5.5.armhf32.sysroot": "${qt5.5.armhf32}/sysroots/cortexa9hf-vfp-neon-poky-linux-gnueabi",
        "qt5.9.mingw32": "${qt}/${qt5.9.version}/mingw53_32",
        "qt5.9.mingw32.bin": "${qt5.9.mingw32}/bin",
        "qt5.9.msvc2015": "${qt5.9}/${qt5.9.version}/msvc2015",
        "qt5.9.msvc2015.bin": "${qt5.9.msvc2015}/bin",
        "qt5.12.msvc2015_64": "${qt5.12}/${qt5.12.version}/msvc2015_64",
        "qt5.12.msvc2015_64.bin": "${qt5.12.msvc2015_64}/bin",
        "qt5.12.winrt.arm": "${qt5.12}/${qt5.12.version}/winrt_armv7_msvc2015",
        "qt5.12.winrt.arm.bin": "${qt5.12}/${qt5.12.version}/winrt_armv7_msvc2015/bin",
        "qt5.12.winrt.x64": "${qt5.12}/${qt5.12.version}/winrt_x64_msvc2015",
        "qt5.12.winrt.x64.bin": "${qt5.12}/${qt5.12.version}/winrt_x64_msvc2015/bin",
        "qt5.9.clang": "${qt}/${qt5.9.version}/clang_64",
        "qt5.9.clang.bin": "${qt5.9.clang}/bin",
        "qt5.9.gcc_64": "${qt}/${qt5.9.version}/gcc_64",
        "qt5.9.gcc_64.bin": "${qt5.9.gcc_64}/bin",
        "qt5.9.android_arm": "${qt}/${qt5.9.version}/android_armv7",
        "qt5.9.android_arm.bin": "${qt}/${qt5.9.version}/android_armv7/bin",
        "qt5.9.android_x86": "${qt}/${qt5.9.version}/android_x86",
        "qt5.9.android_x86.bin": "${qt}/${qt5.9.version}/android_x86/bin",
        "qt5.8.android_x86": "${qt}/5.8/android_x86",
        "qt5.8.android_x86.bin": "${qt5.8.android_x86}/bin",
        "qt5.8.android_arm": "${qt}/5.8/android_armv7",
        "qt5.8.android_arm.bin": "${qt5.8.android_arm}/bin",
        "qt5.8.mingw32": "${qt}/5.8/mingw53_32",
        "qt5.8.mingw32.bin": "${qt5.8.mingw32}/bin",
        "qt5.8.gcc_64": "${qt}/5.8/gcc_64",
        "qt5.8.gcc_64.bin": "${qt5.8.gcc_64}/bin",
        "qt5.8.clang": "${qt}/5.8/clang_64",
        "qt5.8.clang.bin": "${qt5.8.clang}/bin",
        "qt5.8.ios": "${qt}/5.8/ios",
        "qt5.8.ios.bin": "${qt5.8.ios}/bin",
        "qt5.7.gcc_64": "${qt}/5.7.1/gcc_64",
        "qt5.7.android_x86": "${qt}/5.7/android_x86",
        "qt5.7.android_arm": "${qt}/5.7/android_armv7",
        "qt4.8.clang": "${qt}/${qt4.version}/clang_64",
        "qt4.8.clang.bin": "${qt4.8.clang}/bin",
        "mingw32": "${qt}/Tools/mingw530_32",
        "mingw32.bin": "${mingw32}/bin",
        "android": "${root.tool}/winAndroidLibraries",
        "android.sdk": "${android}/android-sdk-windows",
        "android.ndk": "${android}/android-ndk-r13b",
        "android.ant": "${android}/apache-ant-1.10.3",
        "android.java": "${android}/Java",
        "sdk.plat.tool": "${android.sdk}/platform-tools",
        "sdk.build.tool": "${android.sdk}/build-tools",
        "sdk.tool": "${android.sdk}/tools",
        "java1.7.home": "${android.java}/jdk1.7.0_79.jdk/Contents/Home",
        "java1.8.home": "${android.java}/jdk1.8.0_131",
        "java1.9.home": "${android.java}/jdk9.jdk/Contents/Home",
        "java1.7.bin": "${java1.7.home}/bin",
        "java1.8.bin": "${java1.8.home}/bin",
        "java1.9.bin": "${java1.9.home}/bin",
        "ant.bin": "${android.ant}/bin",
        "ndk.arm": "${android.ndk}/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64",
        "ndk.x86": "${android.ndk}/toolchains/x86-4.9/prebuilt/windows-x86_64",
        "ndk.x86_64": "${android.ndk}/toolchains/x86_64-4.9/prebuilt/windows-x86_64",
        "ndk.arm.bin": "${ndk.arm}/bin",
        "ndk.x86.bin": "${ndk.x86}/bin",
        "ndk.x86_64.bin": "${ndk.x86_64}/bin",
        "VS110COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 11.0/Common7/Tools/",
        "VS120COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 12.0/Common7/Tools/",
        "VS140COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/Tools/",
        "VSSDK140Install": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VSSDK/",
        "cdb": "C:/Program Files (x86)/Windows Kits/10/Debuggers/x86",
        "cdb.x64": "C:/Program Files (x86)/Windows Kits/10/Debuggers/x64",
        "make1": "C:/Users/Administrator/msvc_make.bat",
        "make2": "nmake.exe",
        "VC6": "C:/Program Files (x86)/Microsoft Visual Studio",
        "VC6.BIN": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/Bin;C:/Program Files (x86)/Microsoft Visual Studio/Common/MSDev98/Bin",
        "VC6.INCLUDE": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/Include;C:/Program Files (x86)/Microsoft Visual Studio/VC98/MFC/Include",
        "VC6.LIB": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/Lib;C:/Program Files (x86)/Microsoft Visual Studio/VC98/MFC/Lib",
        "QtMsBuild": "C:/Users/Administrator/AppData/Local/QtMsBuild",
        "vcvarsall-1998": "C:/Program Files (x86)/Microsoft Visual Studio/VC98/vcvarsall.bat",
        "vcvarsall-2005": "C:/Program Files (x86)/Microsoft Visual Studio 8/VC/vcvarsall.bat",
        "vcvarsall-2008": "C:/Program Files (x86)/Microsoft Visual Studio 9.0/VC/vcvarsall.bat",
        "vcvarsall-2010": "C:/Program Files (x86)/Microsoft Visual Studio 10.0/VC/vcvarsall.bat",
        "vcvarsall-2012": "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/vcvarsall.bat",
        "vcvarsall-2013": "C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/vcvarsall.bat",
        "vcvarsall-2015": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/vcvarsall.bat",
        "vcvarsall-2017": "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Auxiliary/Build/vcvarsall.bat",
        "vcvarsall-2017-2": "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvarsall.bat"
    },
    "environ": {
        "android.mobile": {
            "path+": [
                "${qt5.android_arm.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.arm.bin}"
            ],
            "make0": "mingw32-make",
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_HOME": "${android.sdk}",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_PLATFORM": "android-23",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "arm-linux-androideabi",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_TOOLS_PREFIX": "arm-linux-androideabi",
            "NDK_TOOLCHAIN_PATH": "${ndk.arm.bin}",
            "NDK_TOOLS_PREFIX": "arm-linux-androideabi",
            "CMAKEGENERATOR": "MinGW Makefiles",
            "CMAKE_SYSTEM_NAME": "Android",
            "CMAKE_C_COMPILER": "${NDK_TOOLS_PREFIX}-gcc",
            "CMAKE_CXX_COMPILER": "${NDK_TOOLS_PREFIX}-g++",
            "CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "NEVER",
            "CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "ONLY",
            "CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "ONLY",
            "QTDIR": "${qt5.android_arm}",
            "QTSPEC": "-spec android-g++",
            "QTCONFIG": "",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt/jar:${JAVA_HOME}/lib/tools.jar",
            "PYMAKE_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QTVERSION": "${qt5.android_arm.version}",
            "QKIT": "ANDROID",
            "QSYS": "Android"
        },
        "android.x86": {
            "path+": [
                "${qt5.android_x86.bin}",
                "${mingw32.bin}",
                "${java1.8.bin}",
                "${android.sdk}",
                "${sdk.plat.tool}",
                "${sdk.build.tool}",
                "${sdk.tool}",
                "${ant.bin}",
                "${ndk.x86.bin}"
            ],
            "make0": "mingw32-make",
            "CLICOLOR": "1",
            "ANDROID_API_VERSION": "android-23",
            "ANDROID_HOME": "${android.sdk}",
            "ANDROID_SDK_ROOT": "${android.sdk}",
            "ANDROID_NDK_PLATFORM": "android-23",
            "ANDROID_NDK_ROOT": "${android.ndk}",
            "ANDROID_NDK_TOOLCHAIN_PREFIX": "x86",
            "ANDROID_NDK_TOOLCHAIN_VERSION": "4.9",
            "ANDROID_NDK_HOST": "windows-x86_64",
            "ANDROID_NDK_TOOLS_PREFIX": "i686-linux-android",
            "NDK_TOOLCHAIN_PATH": "${ndk.x86.bin}",
            "NDK_TOOLS_PREFIX": "i686-linux-android",
            "CMAKEGENERATOR": "MinGW Makefiles",
            "CMAKE_SYSTEM_NAME": "Android",
            "CMAKE_C_COMPILER": "${NDK_TOOLS_PREFIX}-gcc",
            "CMAKE_CXX_COMPILER": "${NDK_TOOLS_PREFIX}-g++",
            "CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "NEVER",
            "CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "ONLY",
            "CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "ONLY",
            "PYMAKE_MYNAME": "T.D.R",
            "a_special_var_const": "hello world",
            "QTDIR": "${qt5.android_x86}",
            "QTSPEC": "-spec android-g++",
            "QTCONFIG": "",
            "JAVA_HOME": "${java1.8.home}",
            "CLASSPATH": ".:${JAVA_HOME}/lib/dt/jar:${JAVA_HOME}/lib/tools.jar",
            "QTVERSION": "${qt5.android_x86.version}",
            "QKIT": "ANDROIDX86",
            "QSYS": "AndroidX86"
        },
        "qt4": {
            "path+": [
                "${cmake.bin}",
                "${mingw32.bin}",
                "${qt4.8.mingw32.bin}"
            ],
            "make0": "mingw32-make",
            "QTVERSION": "${qt4.version}",
            "QTDIR": "${qt4.8.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "CONFIG+=x86",
            "QKIT": "WIN32",
            "QSYS": "Windows"
        },
        "vc6.0": {
            "path+": [
                "${cmake.bin}",
                "${VC6.BIN}",
                "${qt5.5.vc6.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-1998}",
            "vcvarsallparam": "x86",
            "run-vcvarsall": "\"${vcvarsall}\" ${vcvarsallparam}",
            "VISUALSTUDIOVERSION": "6.0",
            "INCLUDE": "${VC6.INCLUDE}",
            "LIB": "${VC6.LIB}",
            "QTVERSION": "${qt5.5.version}",
            "QTDIR": "${qt5.5.vc6}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "MSMAKE": "${make2}"
        },
        "vc6": {
            "path+": [
                "${cmake.bin}",
                "${qt5.5.vc6.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-1998}",
            "vcvarsallparam": "x86",
            "run-vcvarsall": "\"${vcvarsall}\" ${vcvarsallparam}",
            "QTVERSION": "${qt5.5.version}",
            "QTDIR": "${qt5.5.vc6}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "MSMAKE": "${make2}"
        },
        "msvc2015": {
            "path+": [
                "${cmake.bin}",
                "${qt5.9.msvc2015.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "amd64_x86",
            "BuildType": "Debug",
            "BuildTarget": "Win32",
            "run-vcvarsall": "\"${vcvarsall}\" ${vcvarsallparam}",
            "MSBuild": "C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\amd64\\MSBuild.exe",
            "VS110COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 11.0/Common7/Tools/",
            "VS120COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 12.0/Common7/Tools/",
            "VS140COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/Tools/",
            "VSSDK140Install": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VSSDK/",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.msvc2015}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "MSMAKE": "${make2}"
        },
        "msvc2015.x64": {
            "path+": [
                "${cmake.bin}",
                "${qt5.12.msvc2015_64.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "x86_amd64",
            "run-vcvarsall": "${vcvarsall} ${vcvarsallparam}",
            "MSBuild": "C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.12.version}",
            "QTDIR": "${qt5.12.msvc2015_64}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC64",
            "MSMAKE": "${make2}"
        },
        "msvc2015.winrt": {
            "path+": [
                "${cmake.bin}",
                "${qt5.12.winrt.arm.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "amd64_arm",
            "run-vcvarsall": "${vcvarsall} ${vcvarsallparam}",
            "MSBuild": "C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\amd64\\MSBuild.exe",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.12.version}",
            "QTDIR": "${qt5.12.winrt.arm}",
            "QTSPEC": "-spec winrt-arm-msvc2015",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "WinRT",
            "MSMAKE": "${make2}"
        },
        "msvc2015.winrt.simulator": {
            "path+": [
                "${cmake.bin}",
                "${qt5.12.winrt.x64.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2015}",
            "vcvarsallparam": "x86_amd64",
            "run-vcvarsall": "${vcvarsall} ${vcvarsallparam}",
            "MSBuild": "C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.12.version}",
            "QTDIR": "${qt5.12.winrt.x64}",
            "QTSPEC": "-spec winrt-x64-msvc2015",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "WinRTSimulator",
            "MSMAKE": "${make2}"
        },
        "msvc2012": {
            "path+": [
                "${cmake.bin}",
                "${qt5.9.msvc2015.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2012}",
            "vcvarsallparam": "x86",
            "run-vcvarsall": "\"${vcvarsall}\" ${vcvarsallparam}",
            "VS110COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 11.0/Common7/Tools/",
            "VS120COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 12.0/Common7/Tools/",
            "VS140COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/Tools/",
            "VSSDK140Install": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VSSDK/",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.msvc2015}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "MSMAKE": "${make2}"
        },
        "msvc2013": {
            "path+": [
                "${cmake.bin}",
                "${qt5.9.msvc2015.bin}"
            ],
            "make0": "nmake",
            "vcvarsall": "${vcvarsall-2013}",
            "vcvarsallparam": "x86",
            "run-vcvarsall": "\"${vcvarsall}\" ${vcvarsallparam}",
            "MSBuild": "C:\\Program Files (x86)\\MSBuild\\12.0\\Bin\\MSBuild.exe",
            "VS110COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 11.0/Common7/Tools/",
            "VS120COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 12.0/Common7/Tools/",
            "VS140COMNTOOLS": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/Tools/",
            "VSSDK140Install": "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VSSDK/",
            "QtMsBuild": "${QtMsBuild}",
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.msvc2015}",
            "QTSPEC": "-spec win32-msvc",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "MSVC",
            "MSMAKE": "${make2}"
        },
        "msys": {
            "path+": [
                "${msys.bin}"
            ]
        },
        "ffmpeg": {
            "path+": [
                "${FFmpeg.bin}",
                "${FFmpeg.lib}",
                "${FFmpeg.inc}",
                "${cmake.bin}",
                "${mingw32.bin}",
                "${qt5.9.mingw32.bin}"
            ],
            "QTVERSION": "${qt5.9.version}",
            "QTDIR": "${qt5.9.mingw32}",
            "QTSPEC": "-spec win32-g++",
            "QTCONFIG": "",
            "QKIT": "WIN32",
            "QSYS": "Windows"
        },
        "mingw32.armhf32": {
            "path+": [
                "${cmake.bin}",
                "${armhf32.bin}",
                "${qt5.armhf32.bin}",
                "${mingw32.bin}"
            ],
            "make0": "mingw32-make",
            "QTVERSION": "${qt5.version}",
            "QTDIR": "${qt5.armhf32}",
            "QTSPEC": "-spec linux-arm-gnueabihf-g++",
            "QTCONFIG": "",
            "QKIT": "Armhf32",
            "QSYS": "Armhf32"
        },
        "current": "msvc2015"
    },
    "command-assemblage": [
        "cl.exe /nologo /ML /W3 /GX /O2 /D \"WIN32\" /D \"NDEBUG\" /D \"_CONSOLE\" /D \"_MBCS\" /Fp\"Release/hw.pch\" /Yc\"stdafx.h\" /Fo\"Release/\" /Fd\"Release/\" /FD /c \"./\\StdAfx.cpp\"",
        "cl.exe /nologo /ML /W3 /GX /O2 /D \"WIN32\" /D \"NDEBUG\" /D \"_CONSOLE\" /D \"_MBCS\" /Fp\"Release/hw.pch\" /Yu\"stdafx.h\" /Fo\"Release/\" /Fd\"Release/\" /FD /c \".\\hw.cpp\"",
        "link.exe kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /incremental:no /pdb:\"Release/hw2.pdb\" /machine:I386 /out:\"..\\hw2.exe\" .\\Release\\StdAfx.obj .\\Release\\hw.obj",
        "cd D:/GDAL/gdal-2.3.2",
        "nmake /f makefile.vc MSVC_VER=1910 WIN64=yes",
        "nmake /f makefile.vc install MSVC_VER=1910 WIN64=yes",
        "nmake /f makefile.vc devinstall MSVC_VER=1910 WIN64=yes",
        "关于为什么要写MSVC_VER=1910 WIN64=yes，MSVC_VER=1910表示VS2017 ，WIN64=yes表示64位。"
    ],
    "command": {
        "ccc": [
            "echo %QTDIR%"
        ],
        "build.devenv": [
            "if not exist \"*.sln\" ( echo has any .sln? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/${QSYS}",
            "set sdk=${root.sdk}/%profilename%/${QSYS}",
            "set src=%src_path%/%profilename%.sln",
            "if not exist \"%src%\" ( echo %profilename%.sln is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/${QSYS}/${QTVERSION}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo ${QTSPEC} ${QTCONFIG}",
            "devenv.com %src% /Build \"Debug|Win32\"",
            "echo build inf ${QTSPEC} ${QTCONFIG}",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.MSBuild": [
            "if not exist \"*.sln\" ( echo has any .sln? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/${QSYS}",
            "set sdk=${root.sdk}/%profilename%/${QSYS}",
            "set src=%src_path%/%profilename%.sln",
            "if not exist \"%src%\" ( echo %profilename%.sln is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/${QSYS}/${QTVERSION}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo ${QTSPEC} ${QTCONFIG}",
            "\"${MSBuild}\" %src% /m /t:Build /p:Configuration=${BuildType} /p:Platform=${BuildTarget}",
            "echo build inf ${QTSPEC} ${QTCONFIG}",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "configure.qt.armhf32": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5/${QSYS}/${QTVERSION}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -shared --sysroot=${qt5.5.armhf32.sysroot} --prefix=/usr/Qt5.9.2 -xplatform linux-arm-gnueabihf-g++ -nomake tests -nomake examples -no-warnings-are-errors"
        ],
        "daily.qqt": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/${QSYS}/${QTVERSION}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "del /f /q /s demo examples src test",
            "qmake %src% ${QTSPEC} CONFIG+=debug CONFIG+=qml_debug ${QTCONFIG} && mingw32-make qmake_all",
            "mingw32-make -j20",
            "set build=${root.build}/QQt/${QSYS}/${QTVERSION}/Release",
            "md %build:/=\\%",
            "cd /d %build%",
            "del /f /q /s demo examples src test",
            "qmake %src% ${QTSPEC} CONFIG+=release CONFIG+=qml_release ${QTCONFIG} && mingw32-make qmake_all",
            "mingw32-make -j20"
        ],
        "build.qqt": [
            "call ${run-vcvarsall}",
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/${QSYS}/${QTVERSION}/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "qmake %src% ${QTSPEC} CONFIG+=debug CONFIG+=qml_debug ${QTCONFIG} && ${MSMAKE} qmake_all",
            "${MSMAKE}"
        ],
        "qt-creator": [
            "cd ${root.build}",
            "\"R:/Develop/b0-toolkits/winLibraries/Qt/Tools/QtCreator/bin/qtcreator.exe\""
        ],
        "qt5.android.build": [
            "mkdir -p ${qt5.build.path}",
            "cd ${qt5.build.path}",
            "${qt5.source}/configure -prefix ${qqt.install.path} -hostprefix ${qqt.install.path} -xplatform android-g++ -release -nomake tests -nomake examples -android-ndk $ANDROID_NDK_ROOT -android-sdk $ANDROID_SDK_ROOT -android-ndk-host $ANDROID_NDK_HOST -android-toolchain-version $ANDROID_NDK_TOOLCHAIN_VERSION -skip qtwebkit-examples -no-warnings-are-errors"
        ],
        "adb": [
            "adb devices"
        ],
        "cmake": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "::set src=%src_path%/%profilename%.pro",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "start ${cmake.bin}/cmake-gui.exe",
            "cd /d %src_path%"
        ],
        "libtool": [
            "cd /d ${root.prod}/AddLibraryTool/Windows",
            "start ${root.prod}/AddLibraryTool/Windows/AddLibraryTool.exe"
        ],
        "apptool": [
            "cd /d ${root.prod}/ProductExecTool/Windows",
            "start ${root.prod}/ProductExecTool/Windows/ProductExecTool.exe"
        ],
        "build-opencv": [
            "cd /d R:/Develop/c0-buildstation/opencv2.3.1",
            "mingw32-make -j 10",
            "mingw32-make install"
        ],
        "build-opencv-release": [
            "cd /d R:/Develop/c0-buildstation/opencv2.3.1-release",
            "mingw32-make -j 10",
            "mingw32-make install"
        ],
        "build-openscenegraph": [
            "cd /d R:/Develop/c0-buildstation/OpenSceneGraph",
            "mingw32-make -j 10",
            "mingw32-make install"
        ],
        "test": [
            "echo %cd%"
        ],
        "build-osg-release": [
            "cd /d R:/Develop/c0-buildstation/OpenSceneGraph_Release",
            "mingw32-make -j 10",
            "mingw32-make install"
        ],
        "install-qwt": [
            "cd /d R:/Develop/c0-buildstation/qwt/5.9.2/Windows/Debug",
            "mingw32-make install"
        ],
        "make": [
            "mingw32-make %*"
        ],
        "MSBuild": [
            "\"${MSBuild}\" %*"
        ],
        "android.sdk.manager": [
            "${android.sdk}/\"SDK Manager.exe\""
        ],
        "cc0": [],
        "cc1": [
            "@echo off",
            "echo hello."
        ],
        "test.2": [
            "echo %*",
            "set param=%*",
            "echo %param%",
            "ping 127.0.0.1 %param%",
            "rem exit /b 0"
        ],
        "test.3": [
            "rem echo %*",
            "ping %*"
        ],
        "test.4": [
            "exit /b 0"
        ],
        "test.5": [
            "echo 中文。"
        ],
        "test.6": [
            "echo %Path%"
        ],
        "test.7": [
            "type %1"
        ],
        "open.dir": [
            "echo [%1]",
            "if not exist \"\"%1\"\" ( echo has no this dir. & exit /b 0)",
            "rem echo [%1]",
            "start %1"
        ],
        "open.tool": [
            "start ${root.tools}/%1.exe.lnk"
        ],
        "android.sdk": [
            "${android.sdk}/\"SDK Manager.exe\""
        ],
        "color.picker": [
            "start ${jcpicker}\\jcpicker.exe"
        ],
        "qt.creator": [
            "cd ${root.build}",
            "start ${qt}/Tools/QtCreator/bin/qtcreator.exe"
        ],
        "adb.d": [
            "adb devices"
        ],
        "libtool2": [
            "cd /d ${root.prod}/AddLibraryTool-Multiple/Windows",
            "start ${root.prod}/AddLibraryTool-Multiple/Windows/AddLibraryTool-Multiple.exe"
        ],
        "open.pymake": [
            "set sdk=%PYMAKEPROGRAMROOT%",
            "start %sdk%"
        ],
        "open.prod": [
            "set prod=%1",
            "cd /d ${root.prod}/%prod%/Windows",
            "start ${root.prod}/%prod%/Windows/%prod%.exe"
        ],
        "open.prodd": [
            "set prod=%1",
            "echo %prod%",
            "echo ${root.prod}/%prod%/Windows/%prod%d.exe",
            "cd /d ${root.prod}/%prod%/Windows",
            "start ${root.prod}/%prod%/Windows/%prod%d.exe"
        ],
        "open.webrc": [
            "set src=%1",
            "set srcdir=${root.webrc}",
            "if not \"\"%src%\"\" == \"\"\"\" ( set srcdir=%srcdir%/%src% )",
            "set srcdir=%srcdir:/=\\%",
            "echo %srcdir%",
            "start %srcdir%"
        ],
        "open.src": [
            "set src=%1",
            "start ${root.src}/%src%"
        ],
        "open.sdk": [
            "set sdk=%1",
            "start ${root.sdk}/%sdk%"
        ],
        "open.env": [
            "set env0=%PYMAKESOURCEROOT%",
            "start %env0%"
        ],
        "open.build": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "start %build%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "add.project": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtApplicationCreator/Windows",
            "set apptool=%apptoolroot%/QQtApplicationCreatord.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.2": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtApplicationCreator-Multipel/Windows",
            "set apptool=%apptoolroot%/QQtApplicationCreator-Multipeld.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.lib": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtLibraryCreator/Windows",
            "set apptool=%apptoolroot%/QQtLibraryCreatord.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.project.lib.2": [
            "set src_path=%CD%",
            "if \"\"%src_path%\"\" == \"\"%PYMAKEDEFAULTWORKROOT%\"\" ( echo please don't create project in default exec root, please add here command to restrict. & exit /b 0 )",
            "set profilename=%1",
            "set projectroot=%src_path%",
            "if not \"\"%profilename%\"\" == \"\"\"\" ( set projectroot=%src_path%\\%profilename% )",
            "md %projectroot:/=\\%",
            "cd /d %projectroot%",
            "set apptoolroot=${root.prod}/QQtLibraryCreator-Multipel/Windows",
            "set apptool=%apptoolroot%/QQtLibraryCreator-Multipeld.exe",
            "set projectroot=%projectroot:\\=/%",
            "echo %projectroot%",
            "echo %apptool%",
            "call %apptool% clean ",
            "start %apptool% output \"%projectroot%\" "
        ],
        "add.sdk": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set sdktoolroot=${root.prod}/AddLibraryTool/Windows",
            "set sdktool=%sdktoolroot%/AddLibraryToold.exe",
            "if not exist \"%sdktool%\" ( echo %sdktool% is not exist. please build it in debug mode. & exit /b 0)",
            "cd /d %sdktoolroot%",
            "set projectroot=%src_path:\\=/%",
            "start %sdktool% output \"%projectroot%\" "
        ],
        "add.sdk.2": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set sdktoolroot=${root.prod}/AddLibraryTool-Multiple/Windows",
            "set sdktool=%sdktoolroot%/AddLibraryTool-Multipled.exe",
            "if not exist \"%sdktool%\" ( echo %sdktool% is not exist. please build it in debug mode. & exit /b 0)",
            "cd /d %sdktoolroot%",
            "set projectroot=%src_path:\\=/%",
            "start %sdktool% output \"%projectroot%\" "
        ],
        "build.qmake": [
            "if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "if not exist \"%src%\" ( echo %profilename%.pro is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && %make0% qmake_all",
            "%make0%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "open.run.d": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%build%\\debug\\%relativepath%\\%profilename%d.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%d.exe is not exist. & exit /b 0)",
            "set exeroot=%build%\\debug\\%relativepath%",
            "set exeroot=%exeroot:\\=/%",
            "cd /d %exeroot:/=\\%",
            "start %exe%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "open.run": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%build%\\debug\\%relativepath%\\%profilename%.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%.exe is not exist. & exit /b 0)",
            "set exeroot=%build%\\debug\\%relativepath%",
            "set exeroot=%exeroot:\\=/%",
            "cd /d %exeroot:/=\\%",
            "start %exe%",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "start ${cmake.bin}/cmake-gui.exe",
            "cd /d %src_path%"
        ],
        "build.cmake.1": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.sdk}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.2": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.prod}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "configure.qt5.android": [
            "mkdir -p ${qt5.build.path}",
            "cd ${qt5.build.path}",
            "${qt5.source}/configure -prefix ${qqt.install.path} -hostprefix ${qqt.install.path} -xplatform android-g++ -release -nomake tests -nomake examples -android-ndk $ANDROID_NDK_ROOT -android-sdk $ANDROID_SDK_ROOT -android-ndk-host $ANDROID_NDK_HOST -android-toolchain-version $ANDROID_NDK_TOOLCHAIN_VERSION -skip qtwebkit-examples -no-warnings-are-errors"
        ],
        "configure.qt5.armhf32": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/armhf32",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -shared --sysroot=${qt5.5.armhf32.sysroot} --prefix=%sdk_path% -xplatform linux-arm-gnueabihf-g++ -nomake tests -nomake examples -no-warnings-are-errors"
        ],
        "configure.qt5.mingw32.static": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5_static/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/mingw53_32_static",
            "md %build:/=\\%",
            "cd /d %build%",
            "%src_path%/configure -opensource -confirm-license -debug-and-release -static --prefix=%sdk_path% -nomake tests -nomake examples -no-warnings-are-errors -opengl desktop",
            "echo %src_path%",
            "echo %build%",
            "echo %sdk_path%"
        ],
        "build.qt5.mingw32.static": [
            "set src_path=${root.webrc}/qt-everywhere-opensource-src-5.9.2",
            "set build=${root.build}/Qt5_static/%QTVERSION%/%QSYS%/Debug",
            "set sdk_path=${root.tool}/winLibraries/Qt/%QTVERSION%/mingw53_32_static",
            "rem md %build:/=\\%",
            "cd /d %build%",
            "${make0}",
            "${make0} install",
            "echo %src_path%",
            "echo %build%",
            "echo %sdk_path%"
        ],
        "qqt.sh": [
            "cd ${root.src}",
            "call %1"
        ],
        "qqt.daily": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && %make0% qmake_all",
            "%make0%",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Release",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=release CONFIG+=qml_release %QTCONFIG% && %make0% qmake_all",
            "%make0%"
        ],
        "qqt.build": [
            "set src_path=${root.src}/LibQQt",
            "set src=%src_path%/QQt.pro",
            "set build=${root.build}/QQt/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q /s demo examples src test",
            "qmake %src% %QTSPEC% CONFIG+=debug CONFIG+=qml_debug %QTCONFIG% && %make0% qmake_all",
            "%make0%"
        ],
        "build.go": [
            "if not exist \"*.go\" ( echo has any .go? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.go",
            "if not exist \"%src%\" ( echo %profilename%.go is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "call go build %src% ",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "test.end": [
            "echo the env path: %Path%.",
            "echo the last: %CD%."
        ],
        "open.1": [
            "rem shift /2",
            "rem echo %0 %1 %2 %3",
            "start \"\" \"%1\" %2 %3 %4 %5 %6 %7 %8 %9"
        ],
        "open.run.here": [
            "rem if not exist \"*.pro\" ( echo has any .pro? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/%profilename%.pro",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "rem md %build:/=\\%",
            "rem cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo profilename=%profilename%",
            "echo %QTSPEC% %QTCONFIG%",
            "set relativepath=%2",
            "rem if not \"\"%relativepath%\"\" == \"\"\"\" ( set relativepath=%relativepath:\\=/% )",
            "rem echo [%relativepath%]",
            "set exe=%src_path%\\%relativepath%\\%profilename%.exe",
            "set exe=%exe:\\=/%",
            "echo %exe%",
            "if not exist \"%exe%\" ( echo %profilename%.exe is not exist. & exit /b 0)",
            "set exeroot=%src_path%\\%relativepath%",
            "set exeroot=%exeroot:\\=/%",
            "cd /d %exeroot:/=\\%",
            "start \"\" \"%exe%\"",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.sdk": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.sdk}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "rem call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.cmake.app": [
            "if not exist \"CMakeLists.txt\" ( echo has any CMakeLists.txt? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "set cmake-command=cmake %src_path% -G\"%CMAKEGENERATOR%\" -DCMAKE_INSTALL_PREFIX=${root.prod}/%profilename%/%QSYS% -DCMAKE_BUILD_TYPE=Debug",
            "echo %cmake-command%",
            "call %cmake-command%",
            "if not %ERRORLEVEL% == 0 ( echo cmake exit code: %ERRORLEVEL% & exit /b %ERRORLEVEL% )",
            "rem call ${make0}",
            "rem call ${make0} install",
            "rem cmake --build .",
            "echo %cmake-command%",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.make": [
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "rem echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "call ${make0}",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "rem echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.make.install": [
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "rem echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "call ${make0} install",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "rem echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.make.clean": [
            "set src_path=%CD%",
            "set profilename=%1",
            "if \"\"%profilename%\"\" == \"\"\"\" ( echo please input a project name. & exit /b 0 )",
            "set src=%src_path%/CMakeLists.txt",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo Qt spec: %QTSPEC% %QTCONFIG%",
            "rem echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "call ${make0} clean",
            "echo Qt inf  : %QTSPEC% %QTCONFIG%",
            "rem echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.configure": [
            "if not exist \"configure*\" ( echo has any configure? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set \"lj=%~p0\"\necho %lj%\nset \"lj=%lj:\\= %\"\necho %lj%\nfor %%a in (%lj%) do set wjj=%%a\necho 文件夹是:%wjj%",
            "set profilename=%wjj%",
            "if \"%profilename%\" == \"\"\"\" ( echo you will build at %profilename%, but it is empty. & exit /b 0 )",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/configure",
            "if not exist \"%src%\" ( echo %src% is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "%src% %*",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ],
        "build.autogen": [
            "if not exist \"autogen.sh\" ( echo has any autogen.sh? please add here command to restrict. & exit /b 0 )",
            "set src_path=%CD%",
            "set \"lj=%~p0\"\necho %lj%\nset \"lj=%lj:\\= %\"\necho %lj%\nfor %%a in (%lj%) do set wjj=%%a\necho 文件夹是:%wjj%",
            "set profilename=%wjj%",
            "if \"%profilename%\" == \"\"\"\" ( echo you will build at %profilename%, but it is empty. & exit /b 0 )",
            "set prod=${root.prod}/%profilename%/%QSYS%",
            "set sdk=${root.sdk}/%profilename%/%QSYS%",
            "set src=%src_path%/autogen.sh",
            "if not exist \"%src%\" ( echo %src% is not exist. & exit /b 0)",
            "set build=${root.build}/%profilename%/%QSYS%/%QTVERSION%/Debug",
            "md %build:/=\\%",
            "cd /d %build%",
            "rem del /f /q demo examples src test",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "echo %QTSPEC% %QTCONFIG%",
            "msys-sh %src% %*",
            "echo build inf %QTSPEC% %QTCONFIG%",
            "echo src file: %src:\\=/%",
            "echo src path: %src_path:\\=/%",
            "echo build at: %build:\\=/%",
            "echo sdk at  : %sdk:\\=/%",
            "echo prod at : %prod:\\=/%",
            "cd /d %src_path%"
        ]
    }
}